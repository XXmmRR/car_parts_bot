''' –ù–∞—à —Ñ–∞–π–ª —Å –Ω–∞–±–æ—Ä–æ–º –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏ —Ç–µ–∫—Å—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –±—É–¥–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ '''

from string import ascii_uppercase
from aiogram import types

# –¢—É—Ç –±—É–¥—É—Ç –Ω–∞—à–∏ –∫–Ω–æ–ø–∫–∏
# *******************************************************************************************************
buttons_text = ['‚öôÔ∏è–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å', 'üí∞–ö–∞–∫ –ø—Ä–æ–¥–∞—Ç—å', 'üöò–î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ',
                '‚ùå–£–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ', 'üóí–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ', 'üìû–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                'üí∞–ó–∞–∫–∞–∑–∞—Ç—å –∑–∞–ø—á–∞—Å—Ç—å —Å–µ–π—á–∞—Å‚öôÔ∏è']

buttons_callbacks = ['help_shipping', 'help_sell', 'add_car',
                     'delete_car', 'help_about', 'help_message',
                     'buy_car_part']

start_back_button = types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥", callback_data='back')

alphabet_buttons = [types.InlineKeyboardButton(text=x, callback_data=f'letter_{x}') for x in ascii_uppercase]
a = ord('–∞')
alphabet_buttons_ru_text = ''.join([chr(i) for i in range(a,a+6)] + [chr(a+33)] + [chr(i) for i in range(a+6,a+32)])\
    .replace('—å', '').replace('—ã', '').replace('—ä', '').upper()

alphabet_buttons_ru = [types.InlineKeyboardButton(text=x, callback_data=f'letter_{x}') for x in
                       alphabet_buttons_ru_text]


inline_menu = [types.InlineKeyboardButton(text=buttons_text[x], callback_data=buttons_callbacks[x])
               for x in range(len(buttons_text))]


order_menu_text = ['üîß–£–∫–∞–∑–∞—Ç—å –¥–æ–ø –ø–∞—Ä–∞–º–µ—Ç—Ä—ã', '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–ø –ø–∞—Ä–∞–º–µ—Ç—Ä—ã‚è©']
order_menu_callbacks = ['order_add', 'order_skip']
order_menu_buttons = [types.InlineKeyboardButton(text=order_menu_text[x], callback_data=order_menu_callbacks[x])
                      for x in range(len(order_menu_text))]

add_offer_text = ['üí∞–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ', '‚ûï–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∑–∞–ø—á–∞—Å—Ç—å –Ω–∞ —ç—Ç–æ –∞–≤—Ç–æ']
add_offer_callbacks = ['offer_make', 'offer_add']
add_offer_buttons = [types.InlineKeyboardButton(text=add_offer_text[x], callback_data=add_offer_callbacks[x])
                     for x in range(len(order_menu_text))]

# –ë–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø—Ä–æ–¥–∞–≤—Ü—É –∑–∞–ø—á–∞—Å—Ç–∏

send_contact_block_text = ['‚úÖ–ü–æ–¥–µ–ª–∏—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', '‚ûï–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∑–∞–ø—á–∞—Å—Ç—å –Ω–∞ –∞–≤—Ç–æ', '‚ùå–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ']
send_contact_block_callbacks = ['send_contact', 'offer_add', 'send_no']
send_contact_block_menu = [types.InlineKeyboardButton(text=send_contact_block_text[x],
                          callback_data=send_contact_block_callbacks[x])
                          for x in range(len(send_contact_block_text))]

send_contact_block_text_accept = ['‚ùå–î–∞', '‚è©–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ', 'üìµ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–µ –¥–µ–ª—è—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º']
send_contact_block_callbacks_accept = ['exit', 'offer_make', 'send_anon']
send_contact_block_accept_menu = [types.InlineKeyboardButton(text=send_contact_block_text_accept[x],
                          callback_data=send_contact_block_callbacks_accept[x])
                          for x in range(len(send_contact_block_text_accept))]

# *******************************************************************************************************


# –¢—É—Ç –±—É–¥–µ—Ç –Ω–∞—à–µ –º–µ–Ω—é
# *******************************************************************************************************

start_menu = types.InlineKeyboardMarkup(row_width=2)
start_menu.add(*inline_menu)

shipping_menu = types.InlineKeyboardMarkup(row_width=1)
shipping_menu.add(inline_menu[-1], start_back_button)

# –ú–µ–Ω—é –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å'
how_to_sell_menu = types.InlineKeyboardMarkup(row_width=1)
how_to_sell_menu.add(inline_menu[2], start_back_button)


# –ú–µ–Ω—é –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'
about_menu = types.InlineKeyboardMarkup(row_width=1)
about_menu.add(inline_menu[2], inline_menu[3], inline_menu[-1],
               types.InlineKeyboardButton(text='üìà–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –∫–∞–Ω–∞–ª–∞', callback_data='channel_future'),
               start_back_button)

# –ú–µ–Ω—é
alphabet_menu = types.InlineKeyboardMarkup(row_width=5)
alphabet_menu.add(*alphabet_buttons[:-6])
alphabet_menu.row(*alphabet_buttons[-6:])
alphabet_menu.add(types.InlineKeyboardButton(text="–ê–≤—Ç–æ —Å —Ä—É—Å—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏", callback_data='buy_car_part_ru'))
alphabet_menu.row(start_back_button, types.InlineKeyboardButton(text='‚ùå–í—ã—Ö–æ–¥', callback_data='exit'))


alphabet_menu_ru = types.InlineKeyboardMarkup(row_width=5)
alphabet_menu_ru.add(*alphabet_buttons_ru)
alphabet_menu_ru.add(types.InlineKeyboardButton(text="–ê–≤—Ç–æ —Å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏", callback_data='buy_car_part'))
alphabet_menu_ru.row(start_back_button, types.InlineKeyboardButton(text='‚ùå–í—ã—Ö–æ–¥', callback_data='exit'))

order_menu = types.InlineKeyboardMarkup(row_width=1)
order_menu.add(*order_menu_buttons)


add_offer_menu = types.InlineKeyboardMarkup(row_width=1)
add_offer_menu.add(*add_offer_buttons)
add_offer_menu.row(start_back_button, types.InlineKeyboardButton(text="‚ùå–í—ã—Ö–æ–¥", callback_data='exit'))


send_menu = types.InlineKeyboardMarkup(row_width=1)
send_menu.add(*send_contact_block_menu)

send_menu_accept_inline = types.InlineKeyboardMarkup(row_width=1)
send_menu_accept_inline.add(*send_contact_block_accept_menu)

# *******************************************************************************************************

# –¢—É—Ç –±—É–¥—É—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤


# *******************************************************************************************************


how_to_buy = open('text_messages/how_to_order.txt', 'r', encoding='utf8').read()

how_to_sell = open('text_messages/how_to_sell.txt', 'r', encoding='utf8').read()

info_bot = open('text_messages/about_bot.txt', 'r', encoding='utf8').read()

channel_future = open('text_messages/channel_future.txt', 'r', encoding='utf8').read()


# *******************************************************************************************************

#

def get_pref(tmp):
    return tmp[list(tmp.keys())[-2]]


def get_back_buttons(markup, back_command, exit_data='exit', exit_text ='‚ùå–í—ã—Ö–æ–¥', back_text='üîô–ù–∞–∑–∞–¥'):
    markup.row(types.InlineKeyboardButton(text=back_text, callback_data=f'{back_command}'),
              types.InlineKeyboardButton(text=exit_text, callback_data=exit_data))


def get_values_text(tmp, message):
    return ''.join([str(x) + ' ' for x in tmp[message.chat.id].values() if x and not isinstance(x, list)])


def get_values(tmp, sec_dict):
    return ''.join([str(x) + ' ' for x in tmp[sec_dict.message.chat.id].values() if x and not isinstance(x, list)])


def add_skip_button(markup, data):
    markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è©', callback_data=data))


def gen_year(values, gen, year):
    if gen:
        gen_pos = values.find(gen[-1]) + len(gen)
        return values[:gen_pos] + ' ' + year + values[gen_pos:]
    else:
        return values

